#!/bin/bash

cd ~

if [ $USER != Guest ]; then
  remote=true
else
  remote=false
fi

CODE_REPO="$HOME/code"
DOTFILES="$CODE_REPO/dotfiles"

printf "\n************\nSetting up dev\n"

function prompt {
  choice=false
  while true; do
    read -p "y/n? " yn
    case $yn in
      [Yy]* ) choice=true
              break;;
      [Nn]* ) break;;
      * ) echo "y/n? ";;
    esac
  done
}

printf "Are you sure you want to append to the existing dotfiles on your sytem?\n"
prompt
link_dotfiles=$choice

if [ $link_dotfiles == true ]; then
  printf "bashrc, bash_profile, and profile\n"
  current_bashrc=$(<~/.bashrc)
  current_bash_profile=$(<~/.bash_profile)
  current_profile=$(<~/.profile)
  rm -rf ~/.bash_profile
  rm -rf ~/.bashrc
  rm -rf ~/.profile
  ln -s "$DOTFILES/bashrc" "$HOME/.bashrc"
  ln -s "$DOTFILES/profile" "$HOME/.profile"
  printf "\n\n# Existing bash_profile before import on $(date)\n\n$current_bash_profile\n" >> ~/.bashrc
  printf "\n\n# Existing bashrc before import on $(date)\n\n$current_bashrc\n" >> ~/.bashrc
  printf "\n\n# Existing profile before import on $(date)\n\n$current_profile\n" >> ~/.profile
  #
  printf "vimrc\n"
  rm -rf ~/.vimrc
  ln -s "$DOTFILES/vimrc" "$HOME/.vimrc"
  #
  printf "emacs\n"
  rm -rf ~/.emacs.d
  ln -s "$DOTFILES/emacs.d" "$HOME/.emacs.d"
  #
  printf "gitconfig\n"
  rm -rf ~/.gitconfig
  ln -s "$DOTFILES/gitconfig" "$HOME/.gitconfig"
  printf "railsrc\n"
  echo "-d postgresql -T" >> ~/.railsrc
  #
  printf "gemrc\n\n*****\n"
  echo "gem: --no-ri --no-rdoc" >> ~/.gemrc
fi

function install_hb {
  printf "Installing homebrew\n"
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

function install_jq {
  printf "Installing jq (JSON parsing on command line)\n"
  brew install jq
}

printf "\nDo you want to install Homebrew?\n"
prompt
install_brew=$choice
if [ $install_brew == true ]; then
  install_hb
  printf "\n*****\n\n"
fi

printf "\nDo you want to install tab completion for bash?\n"
prompt
install_completion=$choice
if [ $install_completion == true ]; then
  brew install bash-completion
  printf "\n*****\n\n"
fi

printf "\nDo you want to install jq (command line JSON parsing)?\n"
prompt
install_json=$choice
if [ $install_json == true ]; then
  install_jq
  printf "\n*****\n\n"
fi

printf "\nDo you want to install emacs?\n"
prompt
install_emacs=$choice
if [ $install_emacs == true ]; then
  brew install emacs --with-cocoa
  brew linkapps emacs
  printf "\n*****\n\n"
fi

printf "\nDo you want to remove the old (non-brew) emacs?\n"
prompt
remove_emacs=$choice
if [ $remove_emacs == true ]; then
  sudo rm -rf /usr/bin/emacs
  sudo rm -rf /usr/share/emacs
  printf "\n*****\n\n"
fi

printf "\nDo you want to install vim plugins?\n"
prompt
install_vim_plugins=$choice
if [ $install_vim_plugins == true ]; then
  mkdir -p ~/.vim/autoload ~/.vim/bundle &&
  curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
  printf "\n*****\n\n"
fi

printf "\nSetup complete\n\n************\n\n"

exit 1
