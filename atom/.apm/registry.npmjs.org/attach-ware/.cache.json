{"_id":"attach-ware","_rev":"1-5450a4ddb03082ca0c446f6da5061f23","name":"attach-ware","description":"Middleware with configuration","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"attach-ware","version":"1.0.0","description":"Middleware with configuration","license":"MIT","keywords":["compose","connect","middleware","config","configuration"],"dependencies":{"unherit":"^1.0.0"},"repository":{"type":"git","url":"git+https://github.com/wooorm/attach-ware.git"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"files":["index.js"],"devDependencies":{"browserify":"^11.0.0","eslint":"^0.24.0","esmangle":"^1.0.0","istanbul":"^0.3.0","jscs":"^1.0.0","jscs-jsdoc":"^1.0.0","mdast":"^0.27.1","mdast-comment-config":"^0.1.2","mdast-github":"^0.3.0","mdast-lint":"^0.4.0","mdast-man":"^0.4.0","mdast-toc":"^0.5.0","mdast-validate-links":"^0.3.0","mocha":"^2.0.0","ware":"^1.3.0"},"scripts":{"test-api":"mocha --check-leaks test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-travis":"npm run test-coveralls","test":"npm run test-api","lint-api":"eslint .","lint-style":"jscs --reporter inline .","lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","build-md":"mdast . --quiet","build-bundle":"browserify index.js -s AttachWare > attach-ware.js","postbuild-bundle":"esmangle attach-ware.js > attach-ware.min.js","build":"npm run build-md && npm run build-bundle"},"gitHead":"42a886475b586a09e7f7dbc3aaa40a73c7346895","bugs":{"url":"https://github.com/wooorm/attach-ware/issues"},"homepage":"https://github.com/wooorm/attach-ware#readme","_id":"attach-ware@1.0.0","_shasum":"f82351f4b97545109e60a29298081b11ec1b8a94","_from":".","_npmVersion":"2.11.3","_nodeVersion":"2.3.3","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"f82351f4b97545109e60a29298081b11ec1b8a94","tarball":"http://registry.npmjs.org/attach-ware/-/attach-ware-1.0.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{}}},"readme":"# attach-ware [![Build Status](https://img.shields.io/travis/wooorm/attach-ware.svg)](https://travis-ci.org/wooorm/attach-ware) [![Coverage Status](https://img.shields.io/codecov/c/github/wooorm/attach-ware.svg)](https://codecov.io/github/wooorm/attach-ware)\n\nMiddleware with configuration.\n\n## Installation\n\n[npm](https://docs.npmjs.com/cli/install):\n\n```bash\nnpm install attach-ware\n```\n\n**attach-ware** is also available for [bower](http://bower.io/#install-packages),\n[component](https://github.com/componentjs/component), and [duo](http://duojs.org/#getting-started),\nand as an AMD, CommonJS, and globals module, [uncompressed](attach-ware.js) and\n[compressed](attach-ware.min.js).\n\n## Usage\n\n`x.js`:\n\n```js\nmodule.exports = function (ctx, options) {\n    if (!options.condition) return;\n\n    return function (req, res, next) {\n        res.x = 'hello';\n        next();\n    };\n}\n```\n\n`y.js`:\n\n```js\nmodule.exports = function (ctx, options) {\n    if (!options.condition) return;\n\n    return function (req, res, next) {\n        res.y = 'world';\n        next();\n    };\n}\n```\n\n`index.js`:\n\n```js\nvar ware = require('attach-ware')(require('ware'));\nvar x = require('./x.js');\nvar y = require('./y.js');\n\nvar middleware = attachWare()\n    .use(x, {'condition': true})\n    .use(y, {'condition': false})\n    .run({}, {}, function (err, req, res) {\n        console.log(res.x); // \"hello\"\n        console.log(res.y); // undefined\n    });\n```\n\n## API\n\n> **Note**: first create a new constructor (later called `AttachWare`)\n> by passing `ware` to the by this module exposed function. This\n> enables ware-like libraries to be used too.\n\n### new AttachWare()\n\nCreate configurable middleware. Works just like [`ware()`](https://github.com/segmentio/ware#ware-1).\n\n### AttachWare#use(attach, input...)\n\nInvokes `attach` with either `attachWare.context` or `attachWare`,\nand all `input`.\n\nIf `attach` returns another function (`fn`, which can be synchronous,\nasynchronous, or a generator function), that function is [added to the\nmiddleware](https://github.com/segmentio/ware#usefn), and will be invoked when\n[`run()`](https://github.com/segmentio/ware#runinput-callback) is invoked\nlike normal middleware.\n\n### AttachWare#context\n\nThe first argument for `attach`ers. When this is falsey, `attachWare`\nitself is used.\n\n## License\n\n[MIT](LICENSE) Â© [Titus Wormer](http://wooorm.com)\n","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"time":{"modified":"2015-07-27T17:48:20.360Z","created":"2015-07-27T17:48:20.360Z","1.0.0":"2015-07-27T17:48:20.360Z"},"homepage":"https://github.com/wooorm/attach-ware#readme","keywords":["compose","connect","middleware","config","configuration"],"repository":{"type":"git","url":"git+https://github.com/wooorm/attach-ware.git"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"bugs":{"url":"https://github.com/wooorm/attach-ware/issues"},"license":"MIT","readmeFilename":"readme.md","_attachments":{},"_etag":"\"K7NAA5KNBVW7IRFPL2I82DA7\""}